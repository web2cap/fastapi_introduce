version: '3.5'

services:
  booking_pg:
    image: postgres
    volumes:
       - postgres:/data/postgres
       - ./postgres/init:/docker-entrypoint-initdb.d
    ports: # for local dev
      - "54321:5432" 
    networks:
      - booking_int_nw
    restart: unless-stopped
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  booking_redis:
    image: redis:latest
    ports: # for local dev
      - "63792:6379"
    networks:
      - booking_int_nw

  booking_back:
    build:
      context: ../
    volumes:
      - booking_static_vol:/booking/app/static/
    depends_on:
      - booking_pg
      - booking_redis
    networks:
      - booking_int_nw
      - booking_proxy_nw
    restart: always
    env_file:
      - ./.env
    command: /scripts/start_fastapi.sh

  booking_celery:
    build:
      context: ../
    volumes:
      - booking_static_vol:/booking/app/static/
    depends_on:
      - booking_back
    networks:
      - booking_int_nw
    restart: always
    env_file:
      - ./.env
    command: ["/scripts/start_celery.sh", "celery"]

  booking_flower:
    build:
      context: ../
    volumes:
      - booking_static_vol:/booking/app/static/
    depends_on:
      - booking_celery
    networks:
      - booking_int_nw
      - booking_proxy_nw
    env_file:
      - ./.env
    command: ["/scripts/start_celery.sh", "flower"]

  booking_nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - booking_back
      - booking_flower
    networks:
      - booking_proxy_nw
    restart: unless-stopped

  booking_prometheus:
    image: prom/prometheus:v2.43.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    networks:
      - booking_int_nw
    restart: unless-stopped

  booking_grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafanadata:/var/lib/grafana
    depends_on:
      - booking_prometheus
    networks:
      - booking_int_nw
    env_file:
      - ./.env
    restart: unless-stopped


networks:
  booking_int_nw:
    name: booking_int_nw
    driver: bridge
  booking_proxy_nw:
    name: booking_proxy_nw
    driver: bridge

volumes:
    booking_static_vol:
    postgres:
    pgadmin:
    grafanadata:
    prometheusdata:
