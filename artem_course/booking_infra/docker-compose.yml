version: '3.5'

services:
  booking_pg:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
       - ./postgres/init:/docker-entrypoint-initdb.d
    # for local dev
    ports:
      - "54321:5432"
    networks:
      - postgres_nw
    restart: unless-stopped
    env_file:
      - ./.env
  
  booking_pgadmin:
    image: dpage/pgadmin4
    volumes:
       - pgadmin:/var/lib/pgadmin
    # for local dev
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres_nw
    restart: unless-stopped
    env_file:
      - ./.env

  # for local dev
  booking_redis:
    image: redis:latest
    ports:
      - "63792:6379"
    networks:
      - redis_nw

  booking_back:
    build:
      context: ../
    restart: always
    #TODO: NGINX
    ports:
      - "888:8000"
    depends_on:
      - booking_pg
      - booking_redis
    volumes:
      - booking_static_vol:/booking/app/static/
    networks:
      - postgres_nw
      - redis_nw
    env_file:
      - ./.env
    command: /scripts/start_fastapi.sh

  booking_celery:
    build:
      context: ../
    restart: always
    depends_on:
      - booking_pg
      - booking_redis
    volumes:
      - booking_static_vol:/booking/app/static/
    networks:
      - postgres_nw
      - redis_nw
    env_file:
      - ./.env
    command: ["/scripts/start_celery.sh", "celery"]

  booking_flower:
    build:
      context: ../
    env_file:
      - ./.env
    ports:
      - "5555:5555"
    depends_on:
      - booking_celery
    volumes:
      - booking_static_vol:/booking/app/static/
    command: ["/scripts/start_celery.sh", "flower"]
    networks:
      - postgres_nw
      - redis_nw


networks:
  postgres_nw:
    driver: bridge
  redis_nw:
    driver: bridge

volumes:
    booking_static_vol:
    postgres:
    pgadmin: